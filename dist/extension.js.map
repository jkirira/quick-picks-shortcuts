{"version":3,"file":"extension.js","mappings":";;;;;;;;;AAAA;AACA;AACA,eAAe,mBAAO,CAAC,sBAAQ;;AAE/B;AACA;;AAEA;AACA,WAAW,yBAAyB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC5EA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":[".././extension.js","../external commonjs \"vscode\"","../webpack/bootstrap","../webpack/before-startup","../webpack/startup","../webpack/after-startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nconst vscode = require('vscode');\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\n\n/**\n * @param {vscode.ExtensionContext} context\n */\nfunction activate(context) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"quick-picks-shortcuts\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with  registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tconst showQuickPicksShortcuts = vscode.commands.registerCommand('quick-picks-shortcuts.showQuickPicksShortcuts', function () {\n\n\t\t// get shortcuts from settings configuration\n\t\tlet config = vscode.workspace.getConfiguration('quick-picks-shortcuts');\n\t\t// console.log('config', config, config.shortcuts);\n\n\t\tlet shortcuts = config.shortcuts ?? {};\n\n\t\tlet shortcutsList = Object.keys(shortcuts);\n\n\t\t// remove placeholder shortcut\n\t\tlet placeholderIndex = Object.values(shortcuts).findIndex(shortcutCommand => shortcutCommand == \"example.command.name\")\n\n\t\tif (placeholderIndex > -1) {\n\t\t\tshortcutsList.splice(placeholderIndex, 1);\n\t\t}\n\n\t\tnew Promise(async (res, rej) => {\n\t\t\ttry {\n\t\t\t\t// show shortcuts as quick picks\n\t\t\t\tlet selection = await vscode.window.showQuickPick(shortcutsList);\n\t\t\t\t// console.log('selection', selection);\n\n\t\t\t\tif (!selection) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// check if selected command exists\n\t\t\t\tlet availableCommands = await vscode.commands.getCommands(true);\n\t\t\t\t// console.log('availableCommands', availableCommands)\n\n\t\t\t\tlet commandExists = !!shortcuts[selection] && availableCommands.some(command => command === shortcuts[selection]);\n\n\t\t\t\tif (commandExists) {\n\t\t\t\t\t// if selected command exists run it\n\t\t\t\t\tawait vscode.commands.executeCommand(shortcuts[selection]);\n\t\t\t\t}\n\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('showQuickPicksShortcuts error: ', e)\n\t\t\t\tawait vscode.window.showErrorMessage('Could not complete this action.')\n\t\t\t}\n\n\t\t\tres();\n\t\t});\n\n\t});\n\n\tcontext.subscriptions.push(showQuickPicksShortcuts);\n}\n\n// This method is called when your extension is deactivated\nfunction deactivate() { }\n\nmodule.exports = {\n\tactivate,\n\tdeactivate\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./extension.js\");\n",""],"names":[],"sourceRoot":""}